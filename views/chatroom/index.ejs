<% layout("/layouts/boilerplate") -%>
  <script src="/socket.io/socket.io.js"></script>
  <style>
    .message-container{
      width: 100%;
      display: flow-root !important;
    }
    p{
      width: fit-content;
      max-width: 600px !important;
      padding: 3px 5px 3px 10px;
      margin: 5px;
      height: fit-content;
      display: grid;
    }
    .mesender{
      background-color: #5E72A1;
      float: right;
      border-radius: 10px 10px 0px 10px;
    }
    .anothersender{
      background-color: #a1885e;
      float: left;
      border-radius: 10px 10px 10px 0px;
    }
    span{
      display: block;
      text-align: right;
	    float: right !important;
	    font-size: 0.5rem;
	    color: white;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="row">
      <div class="col-12 col-md-6 offset-md-3 mt-4 mb-4 message-scroller">
        <div id="messages" class="mb-20" style="margin-bottom: 70px !important;">
          <% for(message of messages){ %>
            <% if(message.sender.equals(currUser)){ %>
              <div class="message-container">
            <p class="mesender"><%= message.msg %>
              <span><i><b style="color: aqua;"><%= message.sender.username %></b></i> &nbsp; <%= new Date(message.createdAt).toLocaleString('en-IN', { 
                timeZone: 'Asia/Kolkata',
                day: '2-digit',
                month: '2-digit',
                year: 'numeric',
                hour: '2-digit',
                minute: '2-digit',
                hour12: true 
              }) %></span>
             </p></div>
             <% }else{ %>
              <div class="message-container">
              <p class="anothersender"><%= message.msg %>
                <span> <i><b style="color: gold;"><%= message.sender.username %></b></i> &nbsp; <%= new Date(message.createdAt).toLocaleString('en-IN', { 
                  timeZone: 'Asia/Kolkata',
                  day: '2-digit',
                  month: '2-digit',
                  year: 'numeric',
                  hour: '2-digit',
                  minute: '2-digit',
                  hour12: true 
                }) %></span>
               </p></div>
             <% } %>
            <% } %>
          </div>
        <form id="form" class="needs-validation d-flex message-form col-12 col-md-6 offset-md-3">
          <input id="input" autocomplete="off" placeholder="Type message..." class="message-inp form-control"/>
          <button class="btn btn-sm btn-outline-primary">Send</button>
        </form>
      </div>
    </div>
  </div>  

  <script>
    const socket = io();
  
    const form = document.getElementById("form");
    const input = document.getElementById("input");
    const showmsg = document.getElementById("messages");
  
    // ✅ Handle new message
    socket.on("chat message", (msg, user) => {
      if(user[0]._id == `<%= currUser._id %>`){
        
        const div = document.createElement("div")
      div.classList = "message-container"
      const li = document.createElement("p");
      li.classList = "mesender"
      li.textContent = msg;
      const span = document.createElement("span");
      span.innerHTML = `<i><b style="color: aqua;">${user[0].username}</b></i> &nbsp; ${Date.now().toLocaleString('en-IN', { 
        timeZone: 'Asia/Kolkata',
        day: '2-digit',
        month: '2-digit',
        year: 'numeric',
        hour: '2-digit',
        minute: '2-digit',
        hour12: true })}`
        li.appendChild(span);
        div.appendChild(li)
      showmsg.appendChild(div);
      }else{
        const div = document.createElement("div")
      div.classList = "message-container"
      const li = document.createElement("p");
      li.classList = "anothersender"
      li.textContent = msg;
      const span = document.createElement("span");
      span.innerHTML = `<i><b style="color: aqua;">${user[0].username}</b></i> &nbsp; ${Date.now().toLocaleString('en-IN', { 
        timeZone: 'Asia/Kolkata',
        day: '2-digit',
        month: '2-digit',
        year: 'numeric',
        hour: '2-digit',
        minute: '2-digit',
        hour12: true })}`
        li.appendChild(span);
        div.appendChild(li)
      showmsg.appendChild(div);
      }
      
    })
  
    // ✅ Send message
    form.addEventListener("submit", (e) => {
      e.preventDefault();
      if (input.value) {
        socket.emit("chat message", input.value);
        input.value = "";
      }
    });
  </script>
  
</body>
</html>
